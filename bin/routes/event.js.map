{"version":3,"sources":["../../src/routes/event.js"],"names":["router","express","Router","get","req","res","Event","find","listEvents","query","date","filter","evt","status","json","findById","params","id","event","post","newEvent","body","save","put","findByIdAndUpdate","updatedEvent","findByIdAndDelete","deletedEvent"],"mappings":"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","sourcesContent":["import express from 'express'\r\nimport Event from '../models/event'\r\nimport dayjs from 'dayjs'\r\n\r\nconst router = new express.Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n  try {\r\n    let listEvents = await Event.find({});\r\n    if(req.query.date) {\r\n      const date = dayjs(req.query.date);\r\n      listEvents = listEvents.filter(evt => dayjs(evt.date).date() === date.date())\r\n    }\r\n    return res.status(200).json(listEvents);\r\n  } catch(err) {\r\n    return res.status(500).json(err);\r\n  }\r\n});\r\n\r\nrouter.get('/:id', async (req, res) => {\r\n  try {\r\n    const event = await Event.findById(req.params.id);\r\n    return res.status(200).json(event);\r\n  } catch(err) {\r\n    return res.status(500).json(err);\r\n  }\r\n});\r\n\r\nrouter.post('/', async (req, res) => {\r\n  try {\r\n    const newEvent = new Event(req.body);\r\n    await newEvent.save();\r\n    return res.status(201).json(newEvent);\r\n  } catch(err) {\r\n    return res.status(500).json(err);\r\n  }\r\n});\r\n\r\nrouter.put('/:id', async (req, res) => {\r\n  try {\r\n    const updatedEvent = await Event.findByIdAndUpdate(req.params.id, req.body, {new: true});\r\n    return res.status(200).json(updatedEvent);\r\n  } catch(err) {\r\n    return res.status(500).json(err);\r\n  }\r\n});\r\n\r\nrouter.delete('/:id', async (req, res) => {\r\n  try {\r\n    const deletedEvent = await Event.findByIdAndDelete(req.params.id);\r\n    return res.status(200).json(deletedEvent);\r\n  } catch(err) {\r\n    return res.status(500).json(err);\r\n  }\r\n});\r\n\r\nexport default router;"],"file":"event.js"}